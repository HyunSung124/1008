#숨어있는 숫자의 덧셈
# def solution(my_string):
#     answer = 0
#     for i in my_string:
#         if i.isalpha():
#             my_string = my_string.replace(i,' ')
#     my_string = my_string.split()
#     for i in my_string:
#         answer += int(i)
#     return answer
# m = "aAb1B2cC34oOp"
# print(solution(m))


# 다항식 더하기
# def solution(polynomial):
#     answer = ''
#     polynomial = polynomial.split(" + ")
#     print(polynomial)
#     xxx=[]
#     num=0
#     for i in polynomial:
#         if 'x' in i:
#             xxx.append(i)
#             print()
#         else:
#
#     return answer
# m = "3x + 7 + x"
# solution(m)



#다른 코드
# def solution(polynomial):
#     answer = ''
#     polynomial = polynomial.replace('+', '')
#     p = polynomial.split()
#     constant = 0
#     term1 = []
#     for i in p:
#         if i.isdigit():
#             constant += int(i)
#         else:
#             term1.append(i)
# 
#     term1.sort(key=lambda x: x[-1])
#     result = []
#     for t in term1:
#         if len(result) == 0:
#             result.append(t)
#         elif t[-1] == result[-1][-1]:
#             last = result.pop()
#             if len(t) == 1:
#                 t = '1'+t
#             if len(last) == 1:
#                 last = '1' + last
#             result.append(str(int(t[:-1]) + int(last[:-1]))+last[-1])
#         else:
#             result.append(t)
#     for i in result:
#         answer += i + ' + '
#     if constant != 0:
#         return answer + str(constant)
# 
#     return answer [:-3]
# p = "3x + 7 + x"
